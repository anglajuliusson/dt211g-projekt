{"mappings":"ACMA,SAAS,kBACL,OAAO,IAAI,QAAS,CAAC,EAAS,KAE1B,gBAAiB,UAEjB,UAAU,WAAW,CAAC,kBAAkB,CACpC,AAAC,IAEG,IAAM,EAAW,EAAS,MAAM,CAAC,QAAQ,CACnC,EAAY,EAAS,MAAM,CAAC,SAAS,CAC3C,EAAS,CAAC,IAAK,EAAU,IAAK,CAAS,GAGvC,QAAQ,GAAG,CAAC,aAAe,GAC3B,QAAQ,GAAG,CAAC,cAAgB,EAChC,EACA,AAAC,IAEG,QAAQ,KAAK,CAAC,kCAAmC,EAAM,OAAO,EAC9D,EAAO,EACX,EACA,CACI,mBAAoB,CAAA,EACpB,QAAS,IACT,WAAY,CAChB,IAIJ,QAAQ,GAAG,CAAC,gDACZ,EAAO,AAAI,MAAM,iCAEzB,EACA,CAcA,eAAe,UACX,GAAI,CAEA,GAAM,CAAE,IAAA,CAAG,CAAE,IAAA,CAAG,CAAE,CAAG,MAAM,kBAGrB,CAAE,IAAA,CAAG,CAAE,CAAG,MAAM,OAAO,IAAI,CAAC,aAAa,CAAC,QAC1C,CAAE,sBAAA,CAAqB,CAAE,CAAG,MAAM,OAAO,IAAI,CAAC,aAAa,CAAC,UAG5D,EAAW,CAAE,IAAA,EAAK,IAAA,CAAI,EAG5B,IAAM,IAAI,EAAI,SAAS,aAAa,CAAC,aAAc,CAC/C,KAAM,GACN,OAAQ,EACR,MAAO,kBACX,GAGA,OAAS,IAAI,EAAsB,CAC/B,IAAK,IACL,SAAU,EACV,MAAO,cACX,EACJ,CAAE,MAAO,EAAO,CAEZ,QAAQ,KAAK,CAAC,2CAA4C,EAC9D,CACJ,CAEA","sources":["<anon>","src/js/map.js"],"sourcesContent":["/**\n * Hämtar användarens nuvarande geografiska position (latitude och longitude) om geolokalisering stöds av webbläsaren.\n * Om det uppstår ett fel vid hämtning av positionen, loggas ett felmeddelande.\n * \n * @returns {Promise<{lat: number, lng: number}>} // Hämta användarens position som en Promise.\n */ function getUserLocation() {\n    return new Promise((resolve, reject)=>{\n        // Kontrollera om webbläsaren stödjer geolokalisering\n        if (\"geolocation\" in navigator) // Om geolokalisering är tillgänglig, hämta den aktuella positionen\n        navigator.geolocation.getCurrentPosition((position)=>{\n            // Hämtar latitude och longitude från positionen\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            resolve({\n                lat: latitude,\n                lng: longitude\n            });\n            // Logga latitud och longitud\n            console.log(\"Latitude: \" + latitude);\n            console.log(\"Longitude: \" + longitude);\n        }, (error)=>{\n            // Om det uppstår ett fel vid inhämtning av positionen\n            console.error(\"Fel vid inh\\xe4mtning av position:\", error.message);\n            reject(error);\n        }, {\n            enableHighAccuracy: true,\n            timeout: 5000,\n            maximumAge: 0 // Ingen cachelagring\n        });\n        else {\n            // Om geolokalisering inte stöds av webbläsaren\n            console.log(\"Geolokalisering st\\xf6ds inte av din webbl\\xe4sare\");\n            reject(new Error(\"Geolokaliseringen st\\xf6ds inte\"));\n        }\n    });\n}\n/**\n * Initierar Google Maps-kartan och markerar användarens aktuella position på kartan.\n * Hämtar användarens geografiska position (latitude och longitude) och använder dessa för att\n * centrera kartan och placera en markör vid användarens position.\n * \n * Om det inte går att hämta användarens position eller om det sker ett annat fel vid\n * inladdning av kartan, loggas ett felmeddelande i konsolen.\n *\n * @async\n * @function\n * @returns {Promise<void>} \n */ async function initMap() {\n    try {\n        // Hämta användarens position från geolokalisering\n        const { lat, lng } = await getUserLocation();\n        // Vänta på att Google Maps biblioteket och markörbiblioteket ska laddas\n        const { Map } = await google.maps.importLibrary(\"maps\");\n        const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\n        // Definiera positionen med hjälp av användarens latitude och longitude\n        const position = {\n            lat,\n            lng\n        };\n        // Skapa en ny Google Map instans och centrera på användarens position\n        map = new Map(document.querySelector(\".mapFrame\"), {\n            zoom: 13,\n            center: position,\n            mapId: \"eee69d787741fca3\"\n        });\n        // Skapa en markör vid användarens position\n        marker = new AdvancedMarkerElement({\n            map: map,\n            position: position,\n            title: \"Din position\"\n        });\n    } catch (error) {\n        // Logga ett fel om något går fel vid inladdningen av kartan eller positionen\n        console.error(\"Kunde inte initiera kartan pga platsfel:\", error);\n    }\n}\n// Anropa funktionen för att hämta och logga användarens nuvarande position\ninitMap();\n\n//# sourceMappingURL=karta.ef484345.js.map\n","/**\n * Hämtar användarens nuvarande geografiska position (latitude och longitude) om geolokalisering stöds av webbläsaren.\n * Om det uppstår ett fel vid hämtning av positionen, loggas ett felmeddelande.\n * \n * @returns {Promise<{lat: number, lng: number}>} // Hämta användarens position som en Promise.\n */\nfunction getUserLocation() {\n    return new Promise ((resolve, reject) => {\n    // Kontrollera om webbläsaren stödjer geolokalisering\n    if (\"geolocation\" in navigator) {\n        // Om geolokalisering är tillgänglig, hämta den aktuella positionen\n        navigator.geolocation.getCurrentPosition(\n            (position) => {\n                // Hämtar latitude och longitude från positionen\n                const latitude = position.coords.latitude;\n                const longitude = position.coords.longitude;\n                resolve ({lat: latitude, lng: longitude})\n\n                // Logga latitud och longitud\n                console.log(\"Latitude: \" + latitude);\n                console.log(\"Longitude: \" + longitude);\n            },\n            (error) => {\n                // Om det uppstår ett fel vid inhämtning av positionen\n                console.error(\"Fel vid inhämtning av position:\", error.message);\n                reject(error);\n            },\n            {\n                enableHighAccuracy: true, // Försök att få en mer exakt position\n                timeout: 5000, // Maximal tid för att hämta positionen (5 sekunder)\n                maximumAge: 0 // Ingen cachelagring\n            }\n        );\n    } else {\n        // Om geolokalisering inte stöds av webbläsaren\n        console.log(\"Geolokalisering stöds inte av din webbläsare\");\n        reject(new Error(\"Geolokaliseringen stöds inte\"))\n    }\n});\n}\n\n/**\n * Initierar Google Maps-kartan och markerar användarens aktuella position på kartan.\n * Hämtar användarens geografiska position (latitude och longitude) och använder dessa för att\n * centrera kartan och placera en markör vid användarens position.\n * \n * Om det inte går att hämta användarens position eller om det sker ett annat fel vid\n * inladdning av kartan, loggas ett felmeddelande i konsolen.\n *\n * @async\n * @function\n * @returns {Promise<void>} \n */\nasync function initMap() {\n    try {\n        // Hämta användarens position från geolokalisering\n        const { lat, lng } = await getUserLocation(); \n\n        // Vänta på att Google Maps biblioteket och markörbiblioteket ska laddas\n        const { Map } = await google.maps.importLibrary(\"maps\");\n        const { AdvancedMarkerElement } = await google.maps.importLibrary(\"marker\");\n\n        // Definiera positionen med hjälp av användarens latitude och longitude\n        const position = { lat, lng };\n\n        // Skapa en ny Google Map instans och centrera på användarens position\n        map = new Map(document.querySelector(\".mapFrame\"), {\n            zoom: 13, // Zoomnivå på kartan\n            center: position, // Centrerar kartan på användarens position\n            mapId: \"eee69d787741fca3\", // Google Maps karta-id\n        });\n\n        // Skapa en markör vid användarens position\n        marker = new AdvancedMarkerElement({\n            map: map,\n            position: position,\n            title: \"Din position\", // Titel på markören\n        });\n    } catch (error) {\n        // Logga ett fel om något går fel vid inladdningen av kartan eller positionen\n        console.error(\"Kunde inte initiera kartan pga platsfel:\", error);\n    }\n}\n// Anropa funktionen för att hämta och logga användarens nuvarande position\ninitMap();"],"names":["getUserLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","lat","lng","console","log","error","message","enableHighAccuracy","timeout","maximumAge","Error","initMap","Map","google","maps","importLibrary","AdvancedMarkerElement","map","document","querySelector","zoom","center","mapId","marker","title"],"version":3,"file":"karta.ef484345.js.map"}